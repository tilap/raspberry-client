{"version":3,"sources":["../src/scripts.js"],"names":[],"mappings":";;;;;QAKgB;QAqBA;;;;;;AAvBhB,MAAM,SAAS,+BAAkB,aAAlB,EAAiC,sBAAS,IAAT,CAA1C;;;;;;EAEC,SAAS,SAAT,CAAmB,MAAnB,EAA2B,IAA3B,EAAiC;AACpC,WAAO,IAAP,CAAY,YAAZ,EAA0B,EAAE,MAAF,EAAU,IAAV,EAA1B,EADoC;AAEpC,UAAM,SAAS,8BAAU,MAAV,EAAkB,IAAlB,EAAwB,EAAE,KAAK,CAAC,GAAE,SAAH,EAAa,YAAb,CAAL,EAA1B,CAAT,CAF8B;AAGpC,QAAI,OAAO,KAAP,EAAc;AACd,eAAO,KAAP,CAAa,OAAO,KAAP,CAAa,OAAb,CAAb,CADc;KAAlB;;AAIA,QAAI,OAAO,MAAP,EAAe;AACf,cAAM,SAAS,OAAO,MAAP,CAAc,QAAd,EAAT,CADS;AAEf,YAAI,MAAJ,EAAY;AACR,mBAAO,KAAP,CAAa,MAAb,EADQ;SAAZ;KAFJ;;AAOA,QAAI,OAAO,MAAP,EAAe;AACf,cAAM,SAAS,OAAO,MAAP,CAAc,QAAd,GAAyB,IAAzB,EAAT,CADS;AAEf,eAAO,KAAP,CAAa,MAAb,EAFe;AAGf,eAAO,MAAP,CAHe;KAAnB;CAdG;;;;;;EAqBA,SAAS,YAAT,CAAsB,MAAtB,EAA8B,IAA9B,EAAoC;AACvC,UAAM,eAAe,0BAAM,MAAN,EAAc,IAAd,EAAoB,EAAE,KAAK,CAAC,GAAE,SAAH,EAAa,YAAb,CAAL,EAAtB,CAAf,CADiC;AAEvC,iBAAa,MAAb,CAAoB,EAApB,CAAuB,MAAvB;;;qCAA+B,UAAU,IAAV,EAAgB;AAC3C,eAAO,KAAP,CAAa,KAAK,QAAL,EAAb,EAD2C;KAAhB,CAA/B,CAFuC;;AAMvC,iBAAa,MAAb,CAAoB,EAApB,CAAuB,MAAvB;;;qCAA+B,UAAU,IAAV,EAAgB;AAC3C,eAAO,KAAP,CAAa,KAAK,QAAL,EAAb,EAD2C;KAAhB,CAA/B,CANuC;;AAUvC,iBAAa,EAAb,CAAgB,OAAhB;;;+BAAyB,UAAU,IAAV,EAAgB;AACrC,gBAAQ,GAAR,CAAY,oCAAoC,IAApC,CAAZ,CADqC;KAAhB,CAAzB,CAVuC;CAApC","file":"scripts.js","sourcesContent":["import { spawn, spawnSync } from 'child_process';\nimport { ConsoleLogger, LogLevel } from 'nightingale';\n\nconst logger = new ConsoleLogger('app.scripts', LogLevel.INFO);\n\nexport function runScript(script, args) {\n    logger.info('run script', { script, args });\n    const result = spawnSync(script, args, { cwd: `${__dirname}/../scripts/` });\n    if (result.error) {\n        logger.error(result.error.message);\n    }\n\n    if (result.stderr) {\n        const stderr = result.stderr.toString();\n        if (stderr) {\n            logger.error(stderr);\n        }\n    }\n\n    if (result.stdout) {\n        const stdout = result.stdout.toString().trim();\n        logger.debug(stdout);\n        return stdout;\n    }\n}\n\nexport function listenScript(script, args) {\n    const childProcess = spawn(script, args, { cwd: `${__dirname}/../scripts/` });\n    childProcess.stdout.on('data', function (data) {\n        logger.debug(data.toString());\n    });\n\n    childProcess.stderr.on('data', function (data) {\n        logger.error(data.toString());\n    });\n\n    childProcess.on('close', function (code) {\n        console.log('child process exited with code ' + code);\n    });\n}\n"]}