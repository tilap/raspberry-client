{"version":3,"sources":["../src/display.js"],"names":[],"mappings":"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","file":"display.js","sourcesContent":["import Logger from 'nightingale';\nimport { get as getConfig } from './config';\nimport { runScript, spawn } from './scripts';\n\nconst logger = new Logger('app.display');\n\nlet currentDisplay;\nlet autoRestart;\nlet childProcess;\n\nconst displays = {\n    kweb3: { openbox: true },\n    chromium: { openbox: true },\n    livestreamer: { openbox: false },\n};\n\nexport function refresh() {\n    if (childProcess) {\n        logger.log('refresh');\n        const config = getConfig();\n        return runScript(`./${config.display}.sh`, ['refresh']);\n    } else {\n        logger.warn('display stopped');\n    }\n}\n\nexport function update() {\n    logger.info('update');\n    const config = getConfig();\n    if (config.display === 'kweb3' && currentDisplay === config.display) {\n        return runScript(`./${config.display}.sh`, ['load', config.url]);\n    } else {\n        return restart();\n    }\n}\n\nfunction startOpenBox() {\n    logger.info('start openbox');\n    return runScript('./openbox.sh', ['start']);\n}\n\nfunction stopOpenBox() {\n    logger.info('stop openbox');\n    return runScript('./openbox.sh', ['stop']);\n}\n\nfunction startChild() {\n    logger.info('starting child');\n    if (childProcess) {\n        throw new Error('child process already started');\n    }\n\n\n    autoRestart = true;\n\n    const config = getConfig();\n\n    currentDisplay = config.display;\n    logger.info('start', { display: currentDisplay, url: config.url });\n    childProcess = spawn(`./${currentDisplay}.sh`, ['start', config.url]);\n    const thisChildProcess = childProcess;\n    childProcess.stdout.on('data', data => logger.debug(data.toString()));\n    childProcess.stderr.on('data', data => logger.error(data.toString()));\n    childProcess.on('close', code => {\n        const sameChildProcess = thisChildProcess === childProcess;\n        childProcess = null;\n        logger.error(`child process exited with code ${code}`);\n        if (autoRestart && sameChildProcess) {\n            process.nextTick(() => start());\n        }\n    });\n}\n\nexport function openboxStarted() {\n    const config = getConfig();\n    logger.info('openbox started', { display: config.display });\n\n    if (!displays[config.display].openbox) {\n        stopOpenBox();\n    } else {\n        startChild();\n    }\n}\n\nexport function start() {\n    if (childProcess) {\n        logger.warn('start: already started');\n        return;\n    }\n\n    const config = getConfig();\n    logger.info('starting...', { config });\n\n    if (!displays[config.display].openbox) {\n        stopOpenBox();\n        startChild();\n    } else {\n        if (startOpenBox() !== 'started') {\n            logger.warn('openbox not yet started');\n            return;\n        } else {\n            startChild();\n        }\n    }\n}\n\nexport function restart() {\n    logger.info('restarting...');\n    stop();\n    return start();\n}\n\nexport function stop() {\n    autoRestart = false;\n    if (childProcess) {\n        childProcess.removeAllListeners();\n    }\n    childProcess = null;\n\n    logger.info('stop', { display: currentDisplay });\n    runScript('./display.sh', ['stop']);\n    stopOpenBox();\n}\n"]}