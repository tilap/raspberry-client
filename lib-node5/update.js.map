{"version":3,"sources":["../src/update.js"],"names":[],"mappings":";;;;;QASgB,U,GAAA,U;;AAThB;;AACA;;AACA;;AACA;;;;AACA;;AACA;;;;AAEA,MAAM,SAAS,0BAAW,YAAX,CAAf;;AAEO,SAAS,UAAT,GAAsB;AACzB,4BAAW,EAAE,UAAU,IAAZ,EAAX;AACA,WAAO,IAAP,CAAY,aAAZ;AACA,QAAI;AACA,sCAAU,KAAV,EAAiB,CAAC,OAAD,CAAjB,EAA4B,EAAE,OAAO,SAAT,EAAoB,KAAK,CAAC,AAAD,GAAG,SAAH,EAAa,IAAb,CAAzB,EAA5B;;AADA,yBAEmB,8BAAU,KAAV,EAAiB,CAAC,QAAD,EAAW,aAAX,EAA0B,IAA1B,CAAjB,EAAkD,EAAE,KAAK,CAAC,AAAD,GAAG,SAAH,EAAa,IAAb,CAAP,EAAlD,CAFnB;;AAAA,cAEQ,MAFR,cAEQ,MAFR;;AAGA,YAAI,CAAC,OAAO,QAAP,GAAkB,QAAlB,CAA2B,QAA3B,CAAL,EAA2C;AACvC,mBAAO,IAAP,CAAY,mBAAZ;AACA,oCAAW,EAAE,UAAU,KAAZ,EAAX;AACA,mBAAO,KAAP;AACH;;AAED,sCAAU,MAAV,EAAkB,CAAC,KAAD,EAAQ,SAAR,EAAmB,IAAnB,EAAyB,kBAAzB,CAAlB,EAAgE,EAAE,OAAO,SAAT,EAAoB,KAAK,CAAC,AAAD,GAAG,SAAH,EAAa,IAAb,CAAzB,EAAhE;AACA,cAAM,aAAa,KAAK,KAAL,CAAW,sBAAa,CAAC,AAAD,GAAG,SAAH,EAAa,gBAAb,CAAb,CAAX,EAAyD,OAA5E;AACA,YAAI,+BAAJ,EAAmC;AAC/B,0CACI,MADJ,EAEI,CAAC,YAAD,oBAA+B,UAA/B,CAFJ,EAGI,EAAE,OAAO,SAAT,EAAoB,KAAK,SAAzB,EAHJ;AAKH;AACD;AACA,eAAO,IAAP;AACH,KApBD,CAoBE,OAAO,GAAP,EAAY;AACV,eAAO,KAAP,CAAa,IAAI,OAAjB;AACH;AACJ","file":"update.js","sourcesContent":["import { readFileSync } from 'fs';\nimport { version as currentVersion } from '../package.json';\nimport { spawnSync } from 'child_process';\nimport Logger from 'nightingale';\nimport { sendUpdate } from './client';\nimport { exit } from './index';\n\nconst logger = new Logger('app.update');\n\nexport function selfUpdate() {\n    sendUpdate({ updating: true });\n    logger.info('self update');\n    try {\n        spawnSync('git', ['fetch'], { stdio: 'inherit', cwd: `${__dirname}/../` });\n        const { stdout } = spawnSync('git', ['status', '--porcelain', '-b'], { cwd: `${__dirname}/../` });\n        if (!stdout.toString().includes('behind')) {\n            logger.info('nothing to update');\n            sendUpdate({ updating: false });\n            return false;\n        }\n\n        spawnSync('sudo', ['npm', 'install', '-g', 'raspberry-client'], { stdio: 'inherit', cwd: `${__dirname}/../` });\n        const newVersion = JSON.parse(readFileSync(`${__dirname}/../package.json`)).version;\n        if (newVersion !== currentVersion) {\n            spawnSync(\n                'node',\n                ['migrate.js', currentVersion, newVersion],\n                { stdio: 'inherit', cwd: __dirname }\n            );\n        }\n        exit();\n        return true;\n    } catch (err) {\n        logger.error(err.message);\n    }\n}\n"]}