{"version":3,"sources":["../src/config.js"],"names":[],"mappings":";;;;;QAgBgB;QAKA;;;;;;AAlBhB,MAAM,iBAAiB,CAAC,GAAE,SAAH,EAAa,oBAAb,CAAjB;AACN,IAAI,SAAS,CAAC,MAAM;AAChB,QAAI;AACA,eAAO,KAAK,KAAL,CAAW,sBAAa,cAAb,CAAX,CAAP,CADA;KAAJ,CAEE,OAAO,GAAP,EAAY;AACV,eAAO,EAAE,KAAK,CAAC,OAAD,eAAe,UAAf,CAAL,EAAT,CADU;KAAZ;CAHQ,CAAD,EAAT;;;;EAQJ,SAAS,IAAT,GAAgB;AACZ,2BAAc,cAAd,EAA8B,KAAK,SAAL,CAAe,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAA9B,EADY;CAAhB;;;;;EAIO,SAAS,YAAT,CAAsB,SAAtB,EAAiC;AACpC,aAAS,SAAT,CADoC;AAEpC,WAFoC;CAAjC;;;;EAKA,SAAS,MAAT,GAAkB;AACrB,WAAO,OAAO,GAAP,CADc;CAAlB","file":"config.js","sourcesContent":["import { readFileSync, writeFileSync } from 'fs';\nimport { host } from './argv';\n\nconst configFilename = `${__dirname}/../data/config.json`;\nlet config = (() => {\n    try {\n        return JSON.parse(readFileSync(configFilename));\n    } catch (err) {\n        return { url: `http://${host}/no-config` };\n    }\n})();\n\nfunction save() {\n    writeFileSync(configFilename, JSON.stringify(config, null, 4));\n}\n\nexport function updateConfig(newConfig) {\n    config = newConfig;\n    save();\n}\n\nexport function getUrl() {\n    return config.url;\n}\n"]}