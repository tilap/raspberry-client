{"version":3,"sources":["../src/display.js"],"names":[],"mappings":"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","file":"display.js","sourcesContent":["import { ConsoleLogger, LogLevel } from 'nightingale';\nimport { get as getConfig } from './config';\nimport { runScript, spawn } from './scripts';\n\nconst logger = new ConsoleLogger('app.display', LogLevel.INFO);\n\nexport function refresh() {\n    const config = getConfig();\n    return runScript(`./${config.display}.sh`, ['refresh']);\n}\n\nexport function update() {\n    const config = getConfig();\n    if (config.display === 'kweb3') {\n        return runScript(`./${config.display}.sh`, ['load', config.url]);\n    } else {\n        return restart();\n    }\n}\n\nfunction runOpenBox() {\n    return runScript('./openbox.sh', ['start']);\n}\n\nlet autoRestart;\nlet childProcess;\n\nexport function start() {\n    if (runOpenBox() !== 'started') {\n        logger.warn('openbox not yet started');\n        return;\n    }\n\n    if (childProcess) {\n        logger.warn('restarting');\n        return restart();\n    }\n\n    logger.info('start display');\n    autoRestart = true;\n\n    const config = getConfig();\n\n    if (['livestreamer', 'kweb3', 'chromium', 'browser'].indexOf(config.display) === -1) {\n        config.display = 'browser';\n    }\n\n    let script = config.display;\n    if (script === 'browser') {\n        script = 'kweb3';\n    }\n\n    childProcess = spawn(`./${script}.sh`, ['start', config.url]);\n    childProcess.stdout.on('data', data => logger.debug(data.toString()));\n    childProcess.stderr.on('data', data => logger.error(data.toString()));\n    childProcess.on('close', code => {\n        childProcess = null;\n        logger.error(`child process exited with code ${code}`);\n        if (autoRestart) {\n            process.nextTick(() => start());\n        }\n    });\n}\n\nexport function restart() {\n    Promise.resolve(stop())\n        .then(() => start());\n}\n\n\nlet killing = false;\nexport function stop() {\n    logger.info('stoping display');\n    autoRestart = false;\n    if (childProcess) {\n        if (killing) {\n            return new Promise((resolve, reject) => {\n                killing\n                    .then(() => resolve())\n                    .catch(err => reject(err));\n            });\n        }\n\n        return new Promise((resolve) => {\n            killing = new Promise((resolveKilling) => {\n                const timeoutForceKill = setTimeout(() => {\n                    childProcess.kill('SIGKILL');\n                }, 10000);\n                childProcess.once('close', () => {\n                    let cp = childProcess;\n                    logger.info('display stopped');\n                    resolve();\n                    resolveKilling();\n                    childProcess = null;\n                    killing = false;\n                    clearTimeout(timeoutForceKill);\n                    process.nextTick(() => cp.removeAllListeners());\n                });\n                childProcess.kill();\n            });\n        });\n    }\n}\n"]}