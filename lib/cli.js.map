{"version":3,"sources":["../src/cli.js"],"names":[],"mappings":";;;;;;;;AAEA,MAAM,OAAO,QAAQ,eAAR,CAAP;;;AAGN,IAAI,CAAC,KAAK,CAAL,CAAO,CAAP,CAAD,EAAY;AACZ,YAAQ,GAAR,CAAY,4BAAZ,EADY;AAEZ,YAAQ,GAAR,CAAY,UAAZ,EAFY;AAGZ,YAAQ,GAAR,CAAY,iBAAZ,EAHY;AAIZ,YAAQ,GAAR,CAAY,YAAZ,EAJY;AAKZ,YAAQ,GAAR,CAAY,8BAAZ,EALY;AAMZ,YAAQ,GAAR,CAAY,gCAAZ,EANY;AAOZ,YAAQ,GAAR,CAAY,sDAAZ,EAPY;AAQZ,YAAQ,GAAR,CAAY,aAAZ,EARY;AASZ,YAAQ,GAAR,CAAY,mEAAZ,EATY;CAAhB;;AAYA,MAAM,SAAS,+BAAkB,KAAlB,EAAyB,sBAAS,IAAT,CAAlC;;AAEN,MAAM,SAAS,iBAAT;AACN,MAAM,aAAa,gCAAa,MAAb,CAAb;;AAEN,WAAW,EAAX,CAAc,OAAd,EAAuB,OAAO;AAC1B,WAAO,KAAP,CAAa,GAAb,EAD0B;CAAP,CAAvB;;AAIA,OAAO,EAAP,CAAU,OAAV,EAAmB,OAAO;AACtB,WAAO,KAAP,CAAa,GAAb,EADsB;CAAP,CAAnB;;AAIA,OAAO,EAAP,CAAU,KAAV,EAAiB,MAAM;AACnB,WAAO,KAAP,CAAa,CAAC,YAAD,CAAb,EADmB;AAEnB,eAAW,GAAX,GAFmB;CAAN,CAAjB;;AAMA,OAAO,EAAP,CAAU,SAAV,EAAqB,MAAM;AACvB,WAAO,KAAP,CAAa,CAAC,SAAD,CAAb,EADuB;;AAGvB,eAAW,KAAX,CAAiB,IAAjB,EAHuB;CAAN,CAArB;;AAMA,WAAW,EAAX,CAAc,MAAd,EAAsB,QAAQ;AAC1B,QAAI,KAAK,IAAL,KAAc,MAAd,EAAsB;AACtB,gBAAQ,GAAR,CAAY,KAAK,MAAL,CAAZ,CADsB;AAEtB,eAAO,GAAP,GAFsB;KAA1B,MAGO,IAAI,KAAK,KAAL,EAAY;AACnB,gBAAQ,GAAR,CAAY,KAAK,KAAL,CAAZ,CADmB;AAEnB,eAAO,GAAP,GAFmB;KAAhB,MAGA;AACH,gBAAQ,GAAR,CAAY,IAAZ,EADG;KAHA;CAJW,CAAtB;;AAaA,OAAO,OAAP,CAAe,CAAC,GAAE,SAAH,EAAa,UAAb,CAAf","file":"cli.js","sourcesContent":["import { Socket } from 'net';\nimport { ConsoleLogger, LogLevel } from 'nightingale';\nconst argv = require('minimist-argv');\nimport { createStream } from 'objectstream';\n\nif (!argv._[0]) {\n    console.log('Usage: cli <action> [args]');\n    console.log('actions:');\n    console.log('  - self-update');\n    console.log('  - screen');\n    console.log('      on: turn the screen on');\n    console.log('      off: turn the screen off');\n    console.log('      state: display the current state of the screen');\n    console.log('  - display');\n    console.log('      restart: restart the current display (kweb3 / twitch / ...)');\n}\n\nconst logger = new ConsoleLogger('cli', LogLevel.INFO);\n\nconst socket = new Socket();\nconst jsonStream = createStream(socket);\n\njsonStream.on('error', err => {\n    logger.error(err);\n});\n\nsocket.on('error', err => {\n    logger.error(err);\n});\n\nsocket.on('end', () => {\n    logger.debug(`socket ended`);\n    jsonStream.end();\n});\n\n\nsocket.on('connect', () => {\n    logger.debug(`connected`);\n\n    jsonStream.write(argv);\n});\n\njsonStream.on('data', data => {\n    if (data.type === 'done') {\n        console.log(data.result);\n        socket.end();\n    } else if (data.error) {\n        console.log(data.error);\n        socket.end();\n    } else {\n        console.log(data);\n    }\n});\n\n\nsocket.connect(`${__dirname}/../socket`);\n"]}